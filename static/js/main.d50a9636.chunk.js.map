{"version":3,"sources":["actions.js","reducers/index.js","reducers/data.js","reducers/params.js","api.js","sagas.js","store.js","components/main.js","App.js","reportWebVitals.js","index.js"],"names":["REQUEST_API_DATA","RECEIVE_API_DATA","requestApiData","params","type","receiveApiData","data","rootReducer","combineReducers","state","fetchData","a","fetch","response","json","console","log","getApiData","mySaga","action","call","put","message","takeLatest","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","run","Main","results","this","props","result","className","onSubmit","e","preventDefault","target","url","value","name","href","original_link","short_link","React","Component","connect","dispatch","bindActionCreators","store","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"4LAAaA,EAAiB,mBACjBC,EAAiB,mBAEjBC,EAAe,SAAAC,GAAM,MAAG,CAACC,KAAMJ,EAAkBG,WACjDE,EAAe,SAAAC,GAAI,MAAG,CAACF,KAAMH,EAAkBK,SCAtDC,EAAYC,YAAgB,CAClCF,KCHe,WAA6B,IAA5BG,EAA2B,uDAArB,GAAqB,yCAAhBL,EAAgB,EAAhBA,KAAgB,IAAXE,YAAW,MAAN,GAAM,EACzC,OAAOF,IACAH,EACEK,EAEEG,GDDbN,OEJe,WAA+B,IAA9BM,EAA6B,uDAAvB,GAAuB,yCAAlBL,EAAkB,EAAlBA,KAAkB,IAAbD,cAAa,MAAN,GAAM,EAC3C,OAAOC,IACAJ,EACEG,EAEEM,KFCEF,I,gCGRFG,EAAS,uCAAE,WAAMP,GAAN,iBAAAQ,EAAA,+EAEDC,MAAM,wCAAwCT,GAF7C,cAEhBU,EAFgB,gBAGJA,EAASC,OAHL,cAGhBR,EAHgB,yBAIfA,GAJe,kCAMpBS,QAAQC,IAAR,MANoB,0DAAF,sD,WCKZC,G,WASeC,GATzB,SAAUD,EAAWE,GAArB,uEAEkB,OAFlB,kBAEwBC,YAAKV,EAAUS,EAAOhB,QAF9C,OAGK,OADMG,EAFX,gBAGWe,YAAIhB,EAAeC,IAH9B,uDAKIS,QAAQC,IAAI,KAAEM,SALlB,qDASe,SAAUJ,IAAV,iEACb,OADa,SACPK,YAAWvB,EAAkBiB,GADtB,uCCRf,IAAMO,EAAiBC,cACRC,cACbnB,EACAoB,YAAgBH,IAElBA,EAAeI,IAAIV,G,2CCNbW,E,4JAEN,WAAU,IAAD,OACDC,EAAQC,KAAKC,MAAM1B,KAAK2B,QAAU,GACxC,OACA,sBAAKC,UAAU,WAAf,UACC,oBAAIA,UAAU,aAAd,gDACA,sBAAKA,UAAU,YAAf,UACC,uBAAMC,SAAU,SAACC,GACfA,EAAEC,iBACJ,EAAKL,MAAM9B,eAAekC,EAAEE,OAAOC,IAAIC,QAFvC,4BAKD,uBAAOC,KAAK,QACZ,uBAAOP,UAAU,SAAS9B,KAAK,cAE5B,sBAAK8B,UAAU,UAAf,UACE,4BAAG,mBAAGQ,KAAMZ,EAAQa,cAAjB,SAAiCb,EAAQa,kBAC5C,4BAAG,mBAAGD,KAAM,eAAeZ,EAAQc,WAAhC,SAA6Cd,EAAQc,4B,GAlB7CC,IAAMC,WA0BVC,eAFS,SAAAtC,GAAK,MAAI,CAACH,KAAMG,EAAMH,SACpB,SAAA0C,GAAQ,OAAIC,YAAmB,CAAC/C,kBAAgB8C,KAC3DD,CAA6ClB,GCzB9C,G,MAAA,WACZ,OACE,cAAC,IAAD,CAAUqB,MAAOA,EAAjB,SACE,qBAAKhB,UAAU,MAAf,SACA,cAAC,EAAD,UCESiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.d50a9636.chunk.js","sourcesContent":["export const REQUEST_API_DATA='REQUEST_API_DATA'\r\nexport const RECEIVE_API_DATA='RECEIVE_API_DATA'\r\n\r\nexport const requestApiData=params=>({type: REQUEST_API_DATA, params});\r\nexport const receiveApiData=data=>({type: RECEIVE_API_DATA, data});","import {combineReducers} from 'redux';\r\nimport data from './data';\r\nimport params from './params'\r\n\r\nconst rootReducer=combineReducers({\r\ndata,\r\nparams\r\n})\r\nexport default rootReducer","import {RECEIVE_API_DATA} from '../actions'\r\n\r\nexport default (state={}, {type,data=\"\"})=>{\r\n  switch(type) {\r\n    case RECEIVE_API_DATA:\r\n    return data;\r\n    default:\r\n      return state;\r\n  }\r\n};","import {REQUEST_API_DATA} from '../actions'\r\n\r\nexport default (state={}, {type,params=\"\"})=>{\r\n  switch(type) {\r\n    case REQUEST_API_DATA:\r\n    return params;\r\n    default:\r\n      return state;\r\n  }\r\n};","export const fetchData= async(params) => {\r\n  try{\r\n  const response=await fetch(\"https://api.shrtco.de/v2/shorten?url=\"+params)\r\n  const data= await response.json()\r\n  return data\r\n  } catch(e){\r\n    console.log(e)\r\n  }\r\n}","import { call, put, takeEvery, takeLatest } from 'redux-saga/effects'\r\nimport {REQUEST_API_DATA, receiveApiData} from \"./actions\"\r\nimport{fetchData} from'./api';\r\n\r\n// worker Saga: will be fired on USER_FETCH_REQUESTED actions\r\nfunction* getApiData(action) {\r\n   try {\r\n     const data = yield call(fetchData,action.params);\r\n     yield put(receiveApiData(data));\r\n    } catch (e) {\r\n    console.log(e.message)\r\n    }\r\n}\r\n\r\nexport default function* mySaga() {\r\n  yield takeLatest(REQUEST_API_DATA, getApiData);\r\n}","import { createStore, applyMiddleware } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\n\r\nimport rootReducer from './reducers/index.js'\r\nimport mySaga from './sagas'\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\nexport default createStore(\r\n  rootReducer,\r\n  applyMiddleware(sagaMiddleware)\r\n)\r\nsagaMiddleware.run(mySaga)","import React from 'react';\r\nimport {bindActionCreators} from \"redux\"\r\nimport {connect} from \"react-redux\";\r\nimport {requestApiData} from \"../actions\"\r\n\r\nclass Main extends React.Component{\r\n\r\nrender() {\r\n  const results=this.props.data.result || []\r\n  return(\r\n  <div className=\"main-div\">\r\n   <h1 className=\"main-title\">URL Shortener featuring Redux-Saga</h1>\r\n   <div className=\"main-card\">\r\n    <form onSubmit={(e)=>{\r\n      e.preventDefault()\r\n    this.props.requestApiData(e.target.url.value);\r\n    }}>\r\n    Url to Shorten:\r\n   <input name=\"url\"></input>\r\n   <input className=\"button\" type=\"submit\"></input>\r\n   </form>\r\n      <div className=\"results\">\r\n        <p><a href={results.original_link}>{results.original_link}</a></p>\r\n        <p><a href={\"https://www.\"+results.short_link}>{results.short_link}</a></p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n)}}\r\n\r\nconst mapStateToProps = state =>({data: state.data})\r\nconst mapDispatchToProps= dispatch => bindActionCreators({requestApiData},dispatch)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main)","import React from 'react';\nimport { Provider } from \"react-redux\"\nimport store from \"./store\"\nimport Main from \"./components/main\"\nimport \"./base.css\"\n\nexport default()=> {\n  return (\n    <Provider store={store}>\n      <div className='app'>\n      <Main />\n      </div>\n    </Provider>\n  );\n  }","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}